{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "## Hacker Rank\n\nFor Thursdays you will be solving some selected challenges on HackerRank, please create an account if you don't have then\nFollow the links below:\nread them carefully and solve them then copy-paste your solution below in Code Block"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### **Required**:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Equality In An Array](https://www.hackerrank.com/challenges/equality-in-a-array/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "'use strict';\n\nconst fs = require('fs');\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet inputString = '';\nlet currentLine = 0;\n\nprocess.stdin.on('data', function(inputStdin) {\n    inputString += inputStdin;\n});\n\nprocess.stdin.on('end', function() {\n    inputString = inputString.split('\\n');\n\n    main();\n});\n\nfunction readLine() {\n    return inputString[currentLine++];\n}\n\n/*\n * Complete the 'equalizeArray' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts INTEGER_ARRAY arr as parameter.\n */\n\nfunction equalizeArray(arr) {\n    \n  const frequency = {};\n  \n  let maxFrequency = 0;\n  \n\n  for (let i = 0; i < arr.length; i++) {\n      \n    const num = arr[i];\n    \n    frequency[num] = (frequency[num] || 0) + 1;\n    \n    maxFrequency = Math.max(maxFrequency, frequency[num]);\n    \n  }\n\n  const elementsToRemove = arr.length - maxFrequency;\n  return elementsToRemove;\n}\n\nfunction main() {\n    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);\n\n    const n = parseInt(readLine().trim(), 10);\n\n    const arr = readLine().replace(/\\s+$/g, '').split(' ').map(arrTemp => parseInt(arrTemp, 10));\n\n    const result = equalizeArray(arr);\n\n    ws.write(result + '\\n');\n\n    ws.end();\n}\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### **Optional**:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Halloween Sale](https://www.hackerrank.com/challenges/halloween-sale/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "'use strict';\n\nconst fs = require('fs');\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet inputString = '';\nlet currentLine = 0;\n\nprocess.stdin.on('data', function(inputStdin) {\n    inputString += inputStdin;\n});\n\nprocess.stdin.on('end', function() {\n    inputString = inputString.split('\\n');\n\n    main();\n});\n\nfunction readLine() {\n    return inputString[currentLine++];\n}\n\n/*\n * Complete the 'howManyGames' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts following parameters:\n *  1. INTEGER p\n *  2. INTEGER d\n *  3. INTEGER m\n *  4. INTEGER s\n */\n\nfunction howManyGames(p, d, m, s) {\n    // Return the number of games you can buy\n let totalCost = p;\n  let gameCount = 0;\n  \n  while(totalCost <= s){\n    p = p - d;\n    if(p <= m){\n      totalCost = totalCost + m;\n      gameCount++;\n    }else{\n      totalCost = totalCost + p;\n      gameCount++;\n    }\n    \n  }\n  \n  return gameCount;\n}\n\nfunction main() {\n    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);\n\n    const firstMultipleInput = readLine().replace(/\\s+$/g, '').split(' ');\n\n    const p = parseInt(firstMultipleInput[0], 10);\n\n    const d = parseInt(firstMultipleInput[1], 10);\n\n    const m = parseInt(firstMultipleInput[2], 10);\n\n    const s = parseInt(firstMultipleInput[3], 10);\n\n    const answer = howManyGames(p, d, m, s);\n\n    ws.write(answer + '\\n');\n\n    ws.end();\n}\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Sherlock And Squares](https://www.hackerrank.com/challenges/sherlock-and-squares/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "'use strict';\n\nconst fs = require('fs');\n\nprocess.stdin.resume();\nprocess.stdin.setEncoding('utf-8');\n\nlet inputString = '';\nlet currentLine = 0;\n\nprocess.stdin.on('data', function(inputStdin) {\n    inputString += inputStdin;\n});\n\nprocess.stdin.on('end', function() {\n    inputString = inputString.split('\\n');\n\n    main();\n});\n\nfunction readLine() {\n    return inputString[currentLine++];\n}\n\n/*\n * Complete the 'squares' function below.\n *\n * The function is expected to return an INTEGER.\n * The function accepts following parameters:\n *  1. INTEGER a\n *  2. INTEGER b\n */\n\nfunction squares(a, b) {\n    // Write your code here\n let lowerLimit =Number.isInteger(Math.sqrt(a))?Math.sqrt(a)-1 :Math.floor(Math.sqrt(a)) ;\n        \n    let upperLimit =  Math.floor(Math.sqrt(b));\n   \n    return upperLimit-lowerLimit\n    \n}\n\nfunction main() {\n    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);\n\n    const q = parseInt(readLine().trim(), 10);\n\n    for (let qItr = 0; qItr < q; qItr++) {\n        const firstMultipleInput = readLine().replace(/\\s+$/g, '').split(' ');\n\n        const a = parseInt(firstMultipleInput[0], 10);\n\n        const b = parseInt(firstMultipleInput[1], 10);\n\n        const result = squares(a, b);\n\n        ws.write(result + '\\n');\n    }\n\n    ws.end();\n}\n"
            ],
            "outputs": []
        }
    ]
}